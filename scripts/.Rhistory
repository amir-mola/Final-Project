cars_styled <- cars %>%
cars$speed = paste0("**", cars$speed, "**") %>%
cars$dist = paste0("*", cars$dist, "*")
paste0("**", cars$speed, "**")
cars$speed = paste0("**", cars$speed, "**")
cars$dist = paste0("*", cars$dist, "*")
cars_styled <- data.frame(cars$speed, cars$dist)
View(cars_styled)
?cars
install("knitr")
install.packages("knitr")
install.packages("knitr")
load(knitr)
load("knitr")
knitr::opts_chunk$set(echo = TRUE)
make_hist(cars$speed)
make_hist(cars$speed)
make_hist(cars$speed)
make_hist(cars$speed)
# histagram of cars speed
make_hist <- function(dataframe) {
hist(dataframe)
}
# average of speed
mean_speed <- round(mean(cars$speed), 1)
library(dplyr)
cars$speed = paste0("**", cars$speed, "**")
cars$dist = paste0("*", cars$dist, "*")
cars_styled <- data.frame(cars$speed, cars$dist)
cars$speed
# histagram of cars speed
make_hist <- function(dataframe) {
hist(dataframe)
}
# average of speed
mean_speed <- round(mean(cars$speed), 1)
cars_styled <- cars
cars_styled$speed <- paste0("**", cars_styled$speed, "**")
cars_styled$dist <- paste0("*", cars_styled$dist, "*")
View(cars_styled)
# histagram of cars speed
make_hist <- function(dataframe) {
hist(dataframe)
}
# average of speed
mean_speed <- round(mean(cars$speed), 1)
cars_styled <- cars
cars_styled$speed <- paste0("**", cars_styled$speed, "**")
cars_styled$dist <- paste0("*", cars_styled$dist, "*")
View(cars)
View(cars_styled)
kable(cars_styled)
shiny::runApp('Documents/INFO201/a8-shiny-katiechen00')
runApp('Documents/INFO201/a8-shiny-katiechen00')
runApp('Documents/INFO201/a8-shiny-katiechen00')
runApp('Documents/INFO201/a8-shiny-katiechen00')
runApp('Documents/INFO201/a8-shiny-katiechen00')
runApp('Documents/INFO201/a8-shiny-katiechen00')
library(gtrendsR)
source("tmdb_dataset.R")
setwd("~/Documents/INFO201/Final-Project")
library(gtrendsR)
source("tmdb_dataset.R")
res <- gtrends(tmdb_dataset[1,]$title, geo = "US")
movie1 <- make_csv(1, 40)
library(gtrendsR)
source("tmdb_dataset.R")
movie1 <- make_csv(1, 40)
library(gtrendsR)
source("tmdb_dataset.R")
movie2 <- make_csv(41, 80)
View(movie2)
movie1 <- make_csv(1, 40)
View(movie1)
tmdb_dataset <- rbind(movie1, movie2)
res <- gtrends(tmdb_dataset[1,]$title, geo = "US")
res$interest_by_region
test <- res$interest_by_region
View(test)
test1 <- data.frame(t(test))
View(test1)
test1["location", ]
as.character(test1["location", ])
colnames(test1) <- test1["location",]
View(test1)
test1["location",]
colnames(test1) <- test1[1,]
View(test1)
as.vector(test1["location",])
unname(test1["location",])
test1["location",]
as.character(test1["location",])
test1["location",]$`3`
colnames(test1) <- test1[1,]
View(test1)
colnames(test1) <- as.character(unlist(test1[1,]))
View(test1)
unique(test1["keyword",])
test1["keyword",]
as.character(unlist(test1["keyword",]))
unique(as.character(unlist(test1["keyword",])))
test1$movie <- unique(as.character(unlist(test1["keyword",])))
View(test1)
library(dplyr)
test1 <- test1 %>% select(movie, everything())
View(test1)
test1 <- test1["hits",]
View(test1)
rownames(test1) <- NULL
View(test1)
google_trend <- function(dataset, row_num) {
movie_name <- dataset[row_num,]$title
data <- gtrends(movie_name, geo = "US")$interest_by_region
data_rotate <- data.frame(t(data))
colnames(data_rotate) <- as.character(unlist(data_rotate[1,]))
data_rotate$movie <- movie_name
data_rotate <- data_rotate %>% select(movie, everything())
data_rotate <- data_rotate["hit",]
rownames(test1) <- NULL
}
google_data <- function(dataset) {
first <- google_trend(dataset, 1)
for (i in 2:nrow(dataset)) {
first <- rbind(first, google_trend(dataset, i))
}
return(first)
}
data <- google_data(tmdb_dataset)
google_data <- function(dataset) {
first <- google_trend(dataset, 1)
for (i in 2:4) {
first <- rbind(first, google_trend(dataset, i))
}
return(first)
}
data <- google_data(tmdb_dataset)
data1 <- google_trend(tmdb_dataset, 1)
google_trend <- function(dataset, row_num) {
movie_name <- dataset[row_num,]$title
data <- gtrends(movie_name, geo = "US")$interest_by_region
data_rotate <- data.frame(t(data))
colnames(data_rotate) <- as.character(unlist(data_rotate[1,]))
data_rotate$movie <- movie_name
data_rotate <- data_rotate %>% select(movie, everything())
data_rotate <- data_rotate["hit",]
rownames(data_rotate) <- NULL
}
data1 <- google_trend(tmdb_dataset, 1)
google_trend <- function(dataset, row_num) {
movie_name <- dataset[row_num,]$title
data <- gtrends(movie_name, geo = "US")$interest_by_region
data_rotate <- data.frame(t(data))
colnames(data_rotate) <- as.character(unlist(data_rotate[1,]))
data_rotate$movie <- movie_name
data_rotate <- data_rotate %>% select(movie, everything())
data_rotate <- data_rotate["hit",]
rownames(data_rotate) <- NULL
return(data_rotate)
}
data1 <- google_trend(tmdb_dataset, 1)
View(data1)
data2 <- google_trend(tmdb_dataset, 2)
View(data2)
View(tmdb_dataset)
data <- rbind(data1, data2)
View(data)
google_data <- function(dataset) {
first <- google_trend(dataset, 1)
for (i in 2:nrow(dataset)) {
first <- rbind(first, google_trend(dataset, i))
}
return(first)
}
data <- google_data(tmdb_dataset)
library(httr)
library(jsonlite)
source("api.R")
response <- GET("https://api.themoviedb.org/3/genre/movie/list?api_key=d0c718e2a61b92b6173965005833dea8&language=en-US")
response_content <- content(response, type = "text")
body <- fromJSON(response_content)
View(body)
View(body$genres)
test <- "2018-05-15"
format(as.Date(test, format = "%d/%m/%Y"), "%Y")
format(as.Date(test, format = "%Y-%m-%d"), "%Y")
as.numeric(format(as.Date(test, format = "%Y-%m-%d"), "%Y"))
tmdb_dataset$release_year <- as.numeric(format(as.Date(tmdb_dataset$release_date, format = "%Y-%m-%d"), "%Y"))
View(tmdb_dataset)
unique(tmdb_dataset$release_year)
sort(unique(tmdb_dataset$release_year))
tmdb_dataset[1,]
tmdb_dataset[1,]$genre_ids
page1 <- make_csv(1, 40)
View(page1)
page2 <- make_csv(41, 80)
View(page2)
tmdb_data <- rbind(page1, page2)
View(tmdb_data)
write.table(tmdb_data, file = "/data/tmdb_data.txt", row.names = FALSE)
write.csv(tmdb_data, file = "data/tmdb_data.csv", row.names = FALSE)
write.csv(tmdb_data, file = "data/tmdb_data.csv", row.names = FALSE)
tmdb_data <- rbind(page1, page2)
View(tmdb_data)
write.csv(tmdb_data, file = "data/tmdb_data.csv", row.names = FALSE)
write.csv(tmdb_data, file = "data/tmdb_data.csv", row.names = FALSE)
type(tmdb_data$genre_ids)
tmdb_data$genre_ids
str(tmdb_data)
typeof(tmdb_data$genre_ids)
View(tmdb_data$genre_ids)
tmdb_data$genre_ids <- vapply(tmdb_data$genre_ids, paste, collapse = ", ", character(1L))
typeof(tmdb_data$genre_ids)
View(tmdb_data$genre_ids)
View(tmdb_data)
tmdb_data[1,]$genre_ids
tmdb_data$genre_ids <- vapply(tmdb_data$genre_ids, paste, collapse = ", ", character(1L))
write.csv(tmdb_data, file = "data/tmdb_data.csv", row.names = FALSE)
google_trend <- function(dataset, row_num) {
movie_name <- dataset[row_num,]$title
data <- gtrends(movie_name, geo = "US")$interest_by_region
data_rotate <- data.frame(t(data))
colnames(data_rotate) <- as.character(unlist(data_rotate[1,]))
data_rotate$movie <- movie_name
data_rotate <- data_rotate %>% select(movie, everything())
data_rotate <- data_rotate["hit",]
rownames(data_rotate) <- NULL
return(data_rotate)
}
google_data <- function(dataset) {
first <- google_trend(dataset, 1)
for (i in 2:nrow(dataset)) {
first <- rbind(first, google_trend(dataset, i))
}
return(first)
}
test1 <- google_trend(tmdb_data, 1)
View(test1)
google_trend <- function(dataset, row_num) {
movie_name <- dataset[row_num,]$title
data <- gtrends(movie_name, geo = "US")$interest_by_region
data_rotate <- data.frame(t(data))
colnames(data_rotate) <- as.character(unlist(data_rotate[1,]))
data_rotate$movie <- movie_name
data_rotate <- data_rotate %>% select(movie, everything())
data_rotate <- data_rotate["hit",]
rownames(data_rotate) <- NULL
return(data_rotate)
}
google_data <- function(dataset) {
first <- google_trend(dataset, 1)
for (i in 2:nrow(dataset)) {
first <- rbind(first, google_trend(dataset, i))
}
return(first)
}
test <- tmdb_data[1,]$genre_ids
test
strsplit(test, ",")
typeof(strsplit(test, ","))
unlist(strsplit(test, ","))
View(strsplit(test, ","))
View(unlist(strsplit(test, ",")))
unlist(strsplit(test, ","))[1, ]
test1 <- unlist(strsplit(test, ","))
test2 <- strsplit(test, ",")
test3 <- tmdb_data[1,]$genre_ids
typeof(test1)
typeof(test3)
grepl("28", test3)
grepl("2018", tmdb_data[1,]$release_date)
paste0("https://api.themoviedb.org/3/genre/movie/list?api_key=", api_key)
response <- GET(paste0("https://api.themoviedb.org/3/genre/movie/list?api_key=", api_key))
response_content <- content(response, type = "text")
genre_list <- fromJSON(response_content)
View(genre_list)
genre_list <- fromJSON(response_content)$genres
View(genre_list)
tmdb_data$release_date <- as.numeric(format(as.Date(tmdb_data$release_date, "%Y-%m-%d"), "%Y"))
View(tmdb_data)
library(dplyr)
test <- tmdb_data %>% filter(release_year >= 2012 & release_year <= 2018)
test <- tmdb_data %>% filter(release_date >= 2012 & release_date <= 2018)
View(test)
grepl("28", tmdb_data[1,]$genre_ids)
grepl("", tmdb_data[1,]$genre_ids)
grepl(", ", tmdb_data[1,]$genre_ids)
grepl("83", tmdb_data[1,]$genre_ids)
strsplit(test3, ", ")
as.numeric(strsplit(test3, ", "))
strsplit(test3, ", ")[[1]]
test <- strsplit(test3, ", ")[[1]]
test5 <- strsplit(test3, ", ")
View(test)
test[1]
genre_list$name == "Action"
as.numeric(test)
test4 <- as.numeric(test)
tmdb_data$genre_ids <- strsplit(tmdb_data$genre_ids, ", ")[[1]]
typeof(tmdb_data$genre_ids)
strsplit(tmdb_data$genre_ids, ", ")
source("tmdb_dataset.R")
library(httr)
library(jsonlite)
source("api.R")
source("tmdb_dataset.R")
source("scripts/tmdb_dataset.R")
test < tmdb_data %>% filter(grepl("28", genre_ids))
View(tmdb_data)
test < tmdb_data %>% filter(grepl("28", genre_ids))
View(test)
test <- tmdb_data %>% filter(grepl("28", genre_ids))
View(test)
genre_list[,genre_list$name == "Action"]
genre_list[genre_list$name == "Action",]
genre_list[genre_list$name == "Action",]$id
typeof("28")
as.character(28)
scatter_plot <- function(dataset, year_start, year_end, genre, rating_low, rating_high) {
dataset$release_year <- as.numeric(format(as.Date(dataset$release_date, "%Y-%m-%d"), "%Y"))
new_data <- dataset %>%
filter(release_year >= year_start & release_year <= year_end) %>%
filter(grepl(as.character(genre_list[genre_list$name == genre,]$id), genre_ids)) %>%
filter(vote_average >= rating_low & vote_average <= rating_high)
}
test <- scatter_plot(tmdb_data, 2017, 2018, "Action", 7.0, 8.0)
View(tmdb_dataset)
test <- scatter_plot(tmdb_dataset, 2017, 2018, "Action", 7.0, 8.0)
View(test)
data <- read.csv("data/tmdb_data.csv", stringsAsFactors = FALSE)
View(data)
test <- scatter_plot(data, 2017, 2018, "Action", 7.0, 8.0)
View(test)
test <- scatter_plot(data, 2017, 2018, "", 7.0, 8.0)
test <- genre_list %>% filter(grepl("", name))
View(test)
test1 <- tmdb_data %>% filter(grepl(as.character(test$id), genre_ids))
scatter_plot <- function(dataset, year_start, year_end, genre, rating_low, rating_high) {
dataset$release_year <- as.numeric(format(as.Date(dataset$release_date, "%Y-%m-%d"), "%Y"))
new_data <- dataset %>%
filter(release_year >= year_start & release_year <= year_end) %>%
if (genre != "") {
filter(grepl(as.character(genre_list[genre_list$name == genre,]$id), genre_ids))
}
filter(vote_average >= rating_low & vote_average <= rating_high)
}
test <- function(data, 2017, 2018, "Action", 7.0, 8.0)
test <- scatter_plot(data, 2017, 2018, "Action", 7.0, 8.0)
"28" == "48"
"28" != "48"
test <- data %>% filter(grepl("", genre_ids))
View(test)
scatter_plot <- function(dataset, year_start, year_end, genre, rating_low, rating_high) {
dataset$release_year <- as.numeric(format(as.Date(dataset$release_date, "%Y-%m-%d"), "%Y"))
if (genre != "") {
genre <- as.character(genre_list[genre_list$name == genre,]$id)
}
new_data <- dataset %>%
filter(release_year >= year_start & release_year <= year_end) %>%
filter(grepl(genre, genre_ids)) %>%
filter(vote_average >= rating_low & vote_average <= rating_high)
}
test <- scatter_plot(data, 2017, 2018, "Action", 7.0, 8.0)
View(test)
test <- scatter_plot(data, 2017, 2018, "Family", 7.0, 8.0)
View(test)
test <- scatter_plot(data, 2017, 2018, "", 7.0, 8.0)
View(test)
min(tmdb_dataset$release_year)
typeof(tmdb_dataset$release_year)
min(tmdb_dataset$vote_average)
max(tmdb_dataset$vote_average)
max(tmdb_dataset$release_year)
typeof(tmdb_dataset$vote_average)
mean(tmdb_dataset$release_year)
tmdb_dataset[tmdb_dataset$release_year == 2018,]
min(tmdb_dataset$release_year)
unique(tmdb_dataset$release_year)
min(unique(tmdb_dataset$release_year))
tmdb_dataset[tmdb_dataset$relea]
tmdb_dataset[tmdb_dataset$release_year == "NA"]
df <- data.frame(x = c(1,2,3), y = c(0,10,NA), z = c(NA,33,22))
View(df)
completeVec <- complete.cases(df[,"y"])
completeVec
completeVec <- complete.cases(df[,"z"])
completeVec
data[completeVec,]
df[completeVec,]
completeVec <- complete.cases(tmdb_dataset[, "release_year"])
tmdb_dataset <- tmdb_dataset[completeVec,]
View(tmdb_dataset)
min(tmdb_dataset$release_year)
min(tmdb_dataset$release_year)
max(tmdb_dataset$release_year)
katie <- read.csv("data/tmdb_data.csv")
katie <- read.csv("data/tmdb_data.csv")
setwd("~/Documents/INFO201/Final-Project/scripts")
katie <- read.csv("data/tmdb_data.csv")
katie <- read.csv("../data/tmdb_data.csv")
test <- gtrends("Coco", geo = "US")$interest_by_region
library(gtrendsR)
test <- gtrends("Coco", geo = "US")$interest_by_region
test <- gtrends("Coco", geo = "US")
test <- gtrends("Coco", geo = "US")
setwd("~/Documents/INFO201/Final-Project/scripts")
library(gtrendsR)
library(dplyr)
source("tmdb_dataset.R")
katie <- read.csv("../data/tmdb_data.csv")
library(gtrendsR)
test <- gtrends("Coco", geo = "US")
test <- gtrends("Coco", geo = "US")
test <- gtrends("Coco")
install.packages("gtrendsR")
install.packages("gtrendsR")
library(gtrendsR)
test <- gtrends("Coco", geo = "US")
max(tmdb_dataset$release_year)
max(tmdb_dataset$vote_average)
library(httr)
library(jsonlite)
source("api.R")
response <- GET(paste0("https://api.themoviedb.org/3/genre/movie/list?api_key=", api_key))
response_content <- content(response, type = "text")
genre_list <- fromJSON(response_content)$genres
data <- read.csv("../data/tmdb_data.csv", stringsAsFactors = FALSE)
scatter_plot <- function(dataset, year_start, year_end, genre, rating_low, rating_high) {
# create new column called "release_year", get rid of NA for "release_year" column
dataset$release_year <- as.numeric(format(as.Date(dataset$release_date, "%Y-%m-%d"), "%Y"))
completeVec <- complete.cases(dataset[, "release_year"])
dataset <- dataset[completeVec,]
# get genre list
response <- GET(paste0("https://api.themoviedb.org/3/genre/movie/list?api_key=", api_key))
response_content <- content(response, type = "text")
genre_list <- fromJSON(response_content)$genres
# max for x-axis and y-axis
xmax <- max(dataset$release_year)
ymax <- max(dataset$vote_average)
# filter dataset
if (genre != "") {
genre <- as.character(genre_list[genre_list$name == genre,]$id)
}
new_data <- dataset %>%
filter(release_year >= year_start & release_year <= year_end) %>%
filter(grepl(genre, genre_ids)) %>%
filter(vote_average >= rating_low & vote_average <= rating_high)
# scatter plot
plot_ly(new_data, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(0, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
}
min(tmdb_dataset$release_year)
max(tmdb_dataset$release_year)
min(tmdb_dataset$vote_average)
test <- scatter_plot(data, 1931, 2020, "", 0, 10)
library(dplyr)
test <- scatter_plot(data, 1931, 2020, "", 0, 10)
library(plotly)
test <- scatter_plot(data, 1931, 2020, "", 0, 10)
View(test)
test <- scatter_plot(data, 1931, 2020, "Action", 0, 10)
View(test)
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(0, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(0, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
xmax <- max(tmdb_dataset$release_year)
ymax <- max(tmdb_dataset$vote_average)
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(0, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
min(tmdb_dataset$release_year)
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(1930, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(1930, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
plot_ly(tmdb_dataset, x = ~release_year, y = ~vote_average, color = ~original_language,
mode = "markers", marker = list(opacity = .7, size = 10)) %>%
layout(title = "Movie Release Year vs Vote Average",
xaxis = list(range = c(1930, xmax), title = "Release Year"),
yaxis = list(range = c(0, ymax), title = "Vote Average")
) %>%
return()
library(gtrendsR)
res <- gtrends(c("nhl", "nba"), geo = c("CA", "US"))
